@model QUBO.Models.Arreglo

@{
    ViewData["Title"] = "Edit";
}

<h1>Editar</h1>

<h4>Arreglo</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdArreglo" />
            <div class="form-group">
                <label for="ClienteDni" class="control-label">Cliente DNI</label>
                <div class="input-group">
                    <input type="text" id="ClienteDni" class="form-control" value="@ViewData["ClienteDni"]" />
                    <input type="hidden" id="IdCliente" name="IdCliente" value="@ViewData["IdCliente"]" />
                    <button type="button" class="btn btn-primary" style="display:none;" id="btnAgregarCliente" onclick="loadForm('@Url.Action("CreatePartial", "Cliente")', 'Crear Cliente')">
                        <i class="bi bi-plus-circle-fill"></i>
                    </button>
                </div>
                <small id="dniHelp" class="form-text text-muted" style="display:none;">Por favor, ingrese el DNI del cliente.</small>
            </div>
            <div class="form-group">
                <label for="CelularCodigo" class="control-label">Codigo de Celular</label>
                <div class="input-group">
                    <input type="text" id="CelularCodigo" class="form-control" value="@ViewData["CelularCodigo"]" />
                    <input type="hidden" id="IdCelular" name="IdCelular" />
                    <button type="button" class="btn btn-primary" style="display:none;" id="btnAgregarCelular" onclick="loadForm('@Url.Action("CreatePartial", "Celular")', 'Crear Celular')">
                        <i class="bi bi-plus-circle-fill"></i>
                    </button>
                </div>
                <small id="codigoHelp" class="form-text text-muted" style="display:none;">Por favor, ingrese el Codigo del cliente.</small>
            </div>
            <div class="form-group">
                <label asp-for="Problema" class="control-label"></label>
                <input asp-for="Problema" class="form-control" />
                <span asp-validation-for="Problema" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaIng" class="control-label"></label>
                <input asp-for="FechaIng" class="form-control" />
                <span asp-validation-for="FechaIng" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Total" class="control-label">Total</label>
                <input asp-for="Total" class="form-control" type="number"/>
                <span asp-validation-for="Total" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Senia" class="control-label">Seña</label>
                <input asp-for="Senia" class="form-control" type="number"/>
                <span asp-validation-for="Senia" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="IdUsuario" class="control-label">Tecnico</label>
                <select asp-for="IdUsuario" class="form-control" asp-items="ViewBag.IdUsuario"></select>
            </div>

            <div class="form-group">
                <label asp-for="Estado" class="control-label"></label>
                <select asp-for="Estado" class="form-control">
                    <option value="Entrante">Entrante</option>
                    <option value="Reparando">Reparando</option>
                    <option value="Terminado">Terminado</option>
                    <option value="Entregado">Entregado</option>
                    <option value="Sin reparacion">Sin reparacion</option>
                    <option value="Sin falla encontrada">Sin falla encontrada</option>
                    <option value="Esperando confirmacion">Esperando confirmacion</option>
                    <option value="Esperando repuesto">Esperando repuesto</option>
                </select>
                <span asp-validation-for="Estado" class="text-danger"></span>
            </div>

            <!-- Agregar inputs ocultos para enviar los valores si no se modifican -->
            <input type="hidden" id="HiddenClienteDni" name="HiddenClienteDni" value="@ViewData["ClienteDni"]" />
            <input type="hidden" id="HiddenCelularCodigo" name="HiddenCelularCodigo" value="@ViewData["CelularCodigo"]" />

            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<!-- Modal genérico para formularios -->
<div class="modal fade" id="genericModal" tabindex="-1" aria-labelledby="genericModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="genericModalLabel">Formulario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="genericFormContainer"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" id="submitGenericForm" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <link href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />

    <script>
        $(function () {
            // Función para cargar formularios en el modal genérico
            function loadForm(url, modalTitle) {
                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function (data) {
                        $('#genericFormContainer').html(data);
                        $('#genericModalLabel').text(modalTitle);
                        $('#genericModal').modal('show');
                    },
                    error: function (error) {
                        console.error('Error al cargar el formulario:', error);
                    }
                });
            }

            // Mostrar modal con formulario de cliente
            $('#btnAgregarCliente').on('click', function () {
                loadForm('@Url.Action("CreatePartial", "Cliente")', 'Crear Cliente');
                $("#ClienteDni").val('');
            });

            // Mostrar modal con formulario de celular
            $('#btnAgregarCelular').on('click', function () {
                loadForm('@Url.Action("CreatePartial", "Celular")', 'Crear Celular');
                $("#ClienteCodigo").val('');
            });

            // Función para enviar el formulario genérico
            $('#submitGenericForm').on('click', function () {
                var form = $('#genericFormContainer').find('form');
                $.ajax({
                    url: form.attr('action'),
                    method: 'POST',
                    data: form.serialize(),
                    success: function (data) {
                        // Ocultar el modal después de guardar
                        $('#genericModal').modal('hide');
                        // Mostrar mensaje o realizar otras acciones si es necesario
                        alert('Formulario guardado con éxito');
                    },
                    error: function (error) {
                        console.error('Error al guardar el formulario:', error);
                    }
                });
            });

            // Sugerencia genérica
            function setupAutocomplete(inputSelector, hiddenInputSelector, buttonSelector, helpTextSelector, ajaxUrl, mapFunction) {
                $(inputSelector).autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: ajaxUrl,
                            data: { term: request.term },
                            success: function (data) {
                                if (data.length === 0) {
                                    $(buttonSelector).show();
                                    $(helpTextSelector).show();
                                } else {
                                    $(buttonSelector).hide();
                                    $(helpTextSelector).hide();
                                }
                                response($.map(data, mapFunction));
                            }
                        });
                    },
                    select: function (event, ui) {
                        $(hiddenInputSelector).val(ui.item.id);
                        $(buttonSelector).hide();
                        $(helpTextSelector).hide();
                    },
                    change: function (event, ui) {
                        if (!ui.item) {
                            var currentInput = $(inputSelector).val();
                            $.ajax({
                                url: ajaxUrl,
                                data: { term: currentInput },
                                success: function (data) {
                                    var match = data.find(item => item.dni === currentInput || item.codigoProducto === currentInput);
                                    if (match) {
                                        $(hiddenInputSelector).val(match.idCliente || match.idCelular);
                                        $(buttonSelector).hide();
                                        $(helpTextSelector).hide();
                                    } else {
                                        $(hiddenInputSelector).val('');
                                        $(buttonSelector).show();
                                        $(helpTextSelector).show();
                                    }
                                }
                            });
                        }
                    }
                });
            }

            // Configurar autocompletado genérico
            //CLIENTE
            setupAutocomplete(
                "#ClienteDni",
                "#IdCliente",
                "#btnAgregarCliente",
                "#dniHelp",
                '@Url.Action("GetClientesByDni", "Cliente")',
                function (item) {
                    return {
                        label: item.dni,
                        value: item.dni,
                        id: item.idCliente
                    };
                }
            );

            //CELULAR
            setupAutocomplete(
                "#CelularCodigo",
                "#IdCelular",
                "#btnAgregarCelular",
                "#codigoHelp",
                '@Url.Action("GetCelularesByCod", "Celular")',
                function (item) {
                    return {
                        label: item.codigoProducto,
                        value: item.codigoProducto,
                        id: item.idCelular
                    };
                }
            );

            // Limpiar input al hacer clic en agregar cliente
            $("#btnAgregarCliente").on('click', function () {
                $("#ClienteDni").val('');
            });
            $("#btnAgregarCelular").on('click', function () {
                $("#CelularCodigo").val('');
            });

            // Función genérica para comprobar inputs al cargarse la página
            function comprobarInput(inputSelector, hiddenInputSelector, buttonSelector, helpTextSelector, ajaxUrl, findFunction) {
                var inputValue = $(inputSelector).val();
                if (inputValue) {
                    $.ajax({
                        url: ajaxUrl,
                        data: { term: inputValue },
                        success: function (data) {
                            var match = data.find(findFunction);
                            if (match) {
                                $(hiddenInputSelector).val(match.idCliente || match.idCelular);
                                $(buttonSelector).hide();
                                $(helpTextSelector).hide();
                            } else {
                                $(hiddenInputSelector).val('');
                                $(buttonSelector).show();
                                $(helpTextSelector).show();
                            }
                        },
                        error: function (error) {
                            console.error('Error al comprobar el input:', error);
                        }
                    });
                }
            }

            // Comprobar inputs al cargarse la página
            function comprobarInputsAlCargar() {
                comprobarInput(
                    "#ClienteDni",
                    "#IdCliente",
                    "#btnAgregarCliente",
                    "#dniHelp",
                    '@Url.Action("GetClientesByDni", "Cliente")',
                    function (item) { return item.dni === $("#ClienteDni").val(); }
                );

                comprobarInput(
                    "#CelularCodigo",
                    "#IdCelular",
                    "#btnAgregarCelular",
                    "#codigoHelp",
                    '@Url.Action("GetCelularesByCod", "Celular")',
                    function (item) { return item.codigoProducto === $("#CelularCodigo").val(); }
                );
            }

            // Llamar a la función de comprobación al cargarse la página
            comprobarInputsAlCargar();
        });
    </script>
}
